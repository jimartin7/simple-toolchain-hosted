---
defaultBaseImageVersion: latest
stages:
- name: BUILD # The BUILD stage takes input from the master branch of a Git repo by using the repo that is defined in the toolchain.yml file
  inputs:
  - type: git
    branch: master
    service: ${SAMPLE_REPO}
  triggers:
  - type: commit
  jobs:
  - name: Build
    type: builder # This job is of the type builder and uses the defaults for the build job
- name: DEPLOY # generates the DEPLOY stage input
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  jobs: # The job for the DEPLOY stage is defined as follows
  - name: Rolling Deploy
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
      api_key: ${API_KEY}
    # The script for the DEPLOY stage is defined as follows
    # script that performs a "Rolling Deploy" or "Blue-Green Deploy". The script takes the following steps:

    # a. If the app is not deployed, deploy it.
    # b. Else, if the app is deployed:
    # Rename the existing deployed app.
    # Try to deploy the new app version.
    # If a deployment problem occurs, roll back and rename the old app version.
    script: |
      #!/bin/bash
      # Push app
      if ! cf app "$CF_APP"; then  
        cf push "$CF_APP" # Despliega la app
      else
        OLD_CF_APP="${CF_APP}-OLD-$(date +"%s")"
        rollback() {
          set +e  
          if cf app "$OLD_CF_APP"; 
          then
            cf logs "$CF_APP" --recent
            cf delete "$CF_APP" -f
            cf rename "$OLD_CF_APP" "$CF_APP"
          fi
          exit 1
        }
        set -e
        trap rollback ERR
        cf rename "$CF_APP" "$OLD_CF_APP"
        cf push "$CF_APP"
        cf delete "$OLD_CF_APP" -f
      fi
      # Export app name and URL for use in later Pipeline jobs
      export CF_APP_NAME="$CF_APP"
      export APP_URL=http://$(cf app $CF_APP_NAME | grep -e urls: -e routes: | awk '{print $2}')
      # View logs
      #cf logs "${CF_APP}" --recent
      
